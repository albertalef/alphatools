# This is a basic workflow to help you get started with Actions

name: Auto Release

on:
  push:
    branches: [ "master"]

jobs:
  release:
    name: Create Release Job
    permissions: write-all
    runs-on: windows-latest

    # strategy:
    #   matrix:
    #     node-version: [18.x]


    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN_SEMANTIC_RELEASE }}
      
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: pwsh
        run: echo "dir=$(npm config get cache)" >> ${env:GITHUB_OUTPUT}

      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
            
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          
      - name: Install Dependencies
        run: npm install

      - name: Create Release
        id: release
        env:
          HUSKY: 0
          GH_TOKEN: ${{ secrets.GH_TOKEN_SEMANTIC_RELEASE }}
        run: npm run release
